<?xml version="1.0" encoding="utf-8"?>
<ContentPage
    xmlns="http://xamarin.com/schemas/2014/forms"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:maps="clr-namespace:Xamarin.Forms.GoogleMaps;assembly=Xamarin.Forms.GoogleMaps"
    xmlns:vm="clr-namespace:GeohashCross.ViewModels"
    x:Class="GeohashCross.Views.HomePage"
    xmlns:ios="clr-namespace:Xamarin.Forms.PlatformConfiguration.iOSSpecific;assembly=Xamarin.Forms.Core"
    ios:Page.UseSafeArea="True"
    xmlns:controls="clr-namespace:GeohashCross.Controls"
    Shell.NavBarIsVisible="False"
    xmlns:behaviors="clr-namespace:GeohashCross.Behaviors"
    xmlns:converters="clr-namespace:GeohashCross.Converters"
    xmlns:views="clr-namespace:GeohashCross.Views">
    <ContentPage.BindingContext>
        <vm:HomePageViewModel
            x:Name="VM" />
    </ContentPage.BindingContext>
    <ContentPage.Content>
        <Grid
            Margin="10"
            RowDefinitions="Auto, Auto, *, Auto, Auto, Auto"
            ColumnDefinitions="*, Auto, Auto, Auto, Auto"
            ColumnSpacing="10"
            RowSpacing="10"
            x:Name="TheGrid">
            <maps:Map
                Margin="-10,-60,-10,-10"
                x:Name="TheMap"
                MapType="{Binding IsSatteliteView, Converter={StaticResource boolToMapTypeConverter}}"
                MyLocationEnabled="{Binding LocationPermissionGranted}"
                ItemsSource="{Binding GeohashLocations}"
                Grid.ColumnSpan="5"
                Grid.RowSpan="6">
                <maps:Map.ItemTemplate>
                    <DataTemplate>
                        <maps:Pin
                            Position="{Binding ., Converter={StaticResource hashLocationToPositionConverter}}"
                            Label="{Binding Description}" />
                    </DataTemplate>
                </maps:Map.ItemTemplate>
                <maps:Map.Behaviors>
                    <behaviors:EventToCommandBehavior
                        EventName="MapClicked"
                        Command="{Binding MapTappedCommand}"
                        Converter="{StaticResource mapTappedEventArgsToLocationConverter}" />
                </maps:Map.Behaviors>
            </maps:Map>
            <!--Picker and location frame-->
            <Frame Padding="5" Grid.ColumnSpan="5">
                <Grid ColumnDefinitions="30,*,30,*">
                    <Image Scale="0.75" Source="{FontImage FontFamily={StaticResource MaterialDesignIcons}, Glyph={x:Static controls:IconFont.CalendarBlankOutline}, Color=#323130}" />
                    <DatePicker
                            x:Name="HiddenDatePicker"
                            Date="{Binding Date}"
                            Grid.Column="1"
                            VerticalOptions="CenterAndExpand"
                            Visual="Default"
                            Format="yyyy-MM-dd">
                        <DatePicker.Behaviors>
                            <behaviors:EventToCommandBehavior EventName="Unfocused"
                                                                  Command="{Binding DateChangedCommand}" />
                        </DatePicker.Behaviors>
                    </DatePicker>
                    <Image
                            Grid.Column="2"
                            Scale="0.75"
                            Source="{FontImage FontFamily={StaticResource MaterialDesignIcons}, Glyph={x:Static controls:IconFont.Target}, Color=#323130}" />
                    <Label
                            Style="{StaticResource MediumLabel}"
                            Text="{Binding Path=CurrentLocation, Converter={StaticResource locationSummary}}"
                            Grid.Column="3"/>
                </Grid>
            </Frame>
            <Frame Padding="5" Grid.Row="1" Grid.ColumnSpan="5">
                <Grid ColumnDefinitions="30,*,30,*" >
                    <Image Scale="0.75" Source="{FontImage FontFamily={StaticResource MaterialDesignIcons}, Glyph={x:Static controls:IconFont.Pound}, Color=#323130}" />
                    <Label  Style="{StaticResource MediumLabel}"
                                Grid.Column="1"
                                Text="{Binding HashLocation, Converter={StaticResource locationSummary}}" />
                    <Image Grid.Column="2"
                           Scale="0.75"
                           Source="{FontImage FontFamily={StaticResource MaterialDesignIcons}, Glyph={x:Static controls:IconFont.MapMarkerDistance}, Color=#323130}" />
                    <Label Style="{StaticResource MediumLabel}"
                            Grid.Column="3"
                            Text="{Binding Distance, Converter={StaticResource nullableDoubleToDistanceStringConverter}}" />
                </Grid>
            </Frame>
            <!-- Compass popup -->
            <Frame
                Grid.RowSpan="6"
                Grid.ColumnSpan="5"
                x:Name="TheDarkFrame"
                IsVisible="{Binding DarkNavEnabled}"
                BackgroundColor="{StaticResource DarkBackground}">
                <Grid
                    RowSpacing="0" RowDefinitions="30, *, Auto" ColumnDefinitions="Auto, *, Auto">
                    <Label
                        Style="{StaticResource LargeLabel}"
                        TextColor="{StaticResource Divider}"
                        Grid.ColumnSpan="3"
                        HorizontalTextAlignment="Center"
                        Text="Hash Direction" />
                    <views:Compass
                        NeedleDirection="{Binding TargetNeedleDirection}"
                        Grid.Row="1"
                        Grid.ColumnSpan="3"
                        IsVisible="{Binding DarkNavEnabled}" />
                    <Label
                        Style="{StaticResource LargeLabel}"
                        TextColor="{StaticResource Divider}"
                        Grid.Row="2"
                        Grid.ColumnSpan="3"
                        HorizontalTextAlignment="Center"
                        Text="{Binding Distance, Converter={StaticResource nullableDoubleToDistanceStringConverter}}" />
                    <Button
                        Text="{x:Static controls:IconFont.Compass}" 
                        Style="{StaticResource ButtonStyle}"
                        Grid.Column="2"
                        Grid.Row="2"
                        Command="{Binding DarkNavCommand}" />
                </Grid>
            </Frame>
            <Button
                    IsVisible="{Binding DarkNavEnabled, Converter={StaticResource NotBool}}"
                    Style="{StaticResource ButtonStyle}"
                    Text="{StaticResource globe}"
                    Command="{Binding GlobalHashCommand}"
                    Grid.Row="3"
                    Grid.Column="4" />
            <Button
                    Grid.Row="4"
                    IsVisible="{Binding DarkNavEnabled, Converter={StaticResource NotBool}}"
                    Grid.Column="4"
                    Style="{StaticResource ButtonStyle}"
                    Command="{Binding ResetCommand}"
                    Text="{StaticResource refresh}" />
            <Button
                    Style="{StaticResource ButtonStyle}"
                    IsVisible="{Binding DarkNavEnabled, Converter={StaticResource NotBool}}"
                    Text="{x:Static controls:IconFont.Compass}" 
                    Grid.Column="4"
                    Grid.Row="5"
                    Command="{Binding DarkNavCommand}" />
            <Button
                    IsVisible="{Binding DarkNavEnabled, Converter={StaticResource NotBool}}"
                    Grid.Column="3"
                    Grid.Row="5"
                    Text="{StaticResource layers}"
                    Command="{Binding SatteliteCommand}"
                    Style="{StaticResource ButtonStyle}" />
            <Button
                    IsVisible="{Binding DarkNavEnabled, Converter={StaticResource NotBool}}"
                    Grid.Column="2"
                    Grid.Row="5"
                    Text="{StaticResource neighbours}"
                    Command="{Binding ToggleNeighboursCommand}"
                    Style="{StaticResource ButtonStyle}" />
            <Button
                    Grid.Row="5"
                    Grid.Column="1"
                    IsVisible="{Binding DarkNavEnabled, Converter={StaticResource NotBool}}"
                    Style="{StaticResource ButtonStyle}"
                    Clicked="MyPositionClicked"
                    Text="{StaticResource target}" />
        </Grid>
    </ContentPage.Content>
    <ContentPage.Resources>
        <ResourceDictionary>
            <converters:NullableDoubleToDistanceStringConverter x:Key="nullableDoubleToDistanceStringConverter" />
            <converters:HashLocationToPositionConverter
                x:Key="hashLocationToPositionConverter" />
            <converters:BoolToMapTypeConverter
                x:Key="boolToMapTypeConverter" />
            <converters:LocationSummary
                x:Key="locationSummary" />
            <converters:MapTappedEventArgsToLocationConverter
                x:Key="mapTappedEventArgsToLocationConverter" />
        </ResourceDictionary>
    </ContentPage.Resources>
</ContentPage>